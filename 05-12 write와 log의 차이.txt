자바스크립트에서 doucument.Write 와  Consol.log의 차이는?


자바스크립트에서 document.write와 console.log의 차이점
핵심 차이점:

출력 위치:
document.write: 웹 페이지의 HTML 콘텐츠 안에 직접 문자열을 출력합니다. 즉, 사용자가 브라우저에서 직접 볼 수 있는 형태로 출력됩니다.
console.log: 브라우저 개발자 도구의 콘솔 창에 메시지를 출력합니다. 개발자가 디버깅이나 코드 테스트를 위해 사용하는 용도로 사용됩니다. 사용자는 직접 볼 수 없습니다.
사용 용도:
document.write:
동적으로 HTML 요소 생성: 페이지 로딩 후 동적으로 HTML 요소를 추가해야 할 때 사용할 수 있습니다. 하지만, 웹 표준 권장 방식은 아니며, 주의해서 사용해야 합니다. 
이는 웹 페이지 로딩 속도 저하, 예상치 못한 동작, 보안 취약점 발생 가능성 등의 단점이 있기 때문입니다.
디버깅: 간단한 디버깅 메시지를 출력하는 데 사용할 수 있습니다. 하지만, console.log보다 덜 효율적이고 정확한 방법입니다.
console.log:
디버깅: 변수 값, 오류 메시지 등 다양한 정보를 출력하여 코드의 동작을 확인하는 데 사용됩니다. 개발자 도구의 콘솔 창에서 확인할 수 있어 편리합니다.
코드 테스트: 코드가 예상대로 작동하는지 확인하는 데 사용됩니다. 다양한 입력값에 대한 결과를 출력하여 테스트할 수 있습니다.
참고:

document.write는 HTML 문서의 <body> 태그 안에만 사용할 수 있습니다.
console.log는 브라우저 개발자 도구가 열려있는 경우에만 작동합니다.
예시:

JavaScript
// document.write 사용 예시
document.write("Hello World"); // "Hello World" 문자열을 웹 페이지에 출력

// console.log 사용 예시
console.log("Hello World"); // "Hello World" 메시지를 콘솔에 출력 (사용자는 직접 볼 수 없음)
코드를 사용할 때는 주의가 필요합니다.
content_copy
결론:

document.write는 웹 페이지에 직접 문자열을 출력하는 데 사용되며, 주로 디버깅이나 테스트 목적으로 사용됩니다. 하지만, 웹 표준 권장 방식은 아니며, 주의해서 사용해야 합니다.
console.log는 브라우저 개발자 도구의 콘솔 창에 메시지를 출력하는 데 사용되어 디버깅 및 코드 테스트에 매우 유용합니다.
추가적으로, DOM API를 사용하는 것이 더욱 안전하고 효율적인 방식으로 웹 페이지를 조작할 수 있으므로 최신 웹 개발에서는 DOM API를 사용하는 것이 권장됩니다.